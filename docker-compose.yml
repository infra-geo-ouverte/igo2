version: '2'

services:
  serve:
    build:
      context: .
      dockerfile: ./.docker/igo.development.dockerfile
    command: npm start
    container_name: igo-dev
    image: igo/dev
    environment:
      NODE_ENV: development
    volumes:
      - .:/home/app/igo
    ports:
      - '4200:4200'


# docker-compose build
# docker-compose up serve
# docker-compose up -d


  # igo-nginx:
  #   command: /bin/bash -c "envsubst '$$NGINX_HOST $$NGINX_PORT' < /etc/nginx/conf.d/igo2.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
  #   container_name: igo-prod
  #   environment:
  #     - NGINX_HOST=localhost
  #     - NGINX_PORT=80
  #   image: nginx
  #   ports:
  #     - '4201:80'
  #   volumes:
  #     - ./.docker/nginx.conf:/etc/nginx/conf.d/igo2.template
  #     - ./dist/prod:/var/www/dist/prod

  # test:
  #   build:
  #     context: .
  #     dockerfile: ./.docker/igo.development.dockerfile
  #   command: npm test
  #   container_name: igo-dev-test
  #   image: igo/dev
  #   environment:
  #     NODE_ENV: development
  #   volumes:
  #     - .:/home/app/igo
  #   privileged: true
  #
  # e2e:
  #   build:
  #     context: .
  #     dockerfile: ./.docker/igo.development.dockerfile
  #   command: npm run ng e2e
  #   container_name: igo-dev-e2e
  #   image: igo/dev
  #   environment:
  #     NODE_ENV: development
  #   volumes:
  #     - .:/usr/src/app
